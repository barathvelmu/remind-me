{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","PropTypes","string","onclick","func","Header","title","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updateTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f777d5ab.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n\n    return (\n    <button onClick={onClick} style={{ backgroundColor: color}}  className='btn'>\n        {text}\n    </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.defaultProps = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onclick: PropTypes.func\n}\n\nexport default Button","import PropTypes from 'prop-types';\nimport Button from './Button'\nimport { useLocation }  from 'react-router-dom'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n\n    const location = useLocation()\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && <Button color= {showAdd ? 'rgb(165, 1, 92)' : 'rgb(0, 0, 0)'} text={showAdd ? 'Close' : 'Add'} onClick= {onAdd} />}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Reminder App',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>React Practice</p>\n            <Link to =\"/about\">Project Info</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className= {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = { () => onToggle(task.id)}>\n            <h3>{task.text} \n                <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick = {() => onDelete(task.id)}/>\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    \n    return (\n        <>\n         {tasks.map((task, index) => (\n             <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\n         ))}   \n        </>\n    )\n\n}\n\nexport default Tasks\n","import { useState } from 'react'\nimport { FaBullseye } from 'react-icons/fa'\n\nconst AddTask = ({ onAdd }) => {\n\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault() //prevent default behaviour\n\n        if (!text) {\n            alert('Please add task')\n            return\n        }\n\n        onAdd( { text, day, reminder })\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n\n            <div className='form-control'> \n                <label>Reminder</label>\n                <input type='text' placeholder='Add Reminder' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n\n            <div className='form-control form-control-check'> \n                <label>Occurance</label>\n                <input type='text' placeholder='Time' value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n\n            <div className='form-control'> \n                <label>Prioritize (double click)</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <footer>\n            <h4>First React project for Barath</h4>\n            <Link to='/'>Go To Project</Link> \n        </footer>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\n\n// NOTE: http://localhost:5000 is a simulated backend for practice purposes (json-server)\n\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  // Fetch Task (single)\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }, \n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json() //data is nothing but newTask\n\n    setTasks([...tasks, data])\n  }\n\n  //Delete Task \n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n  })\n\n    setTasks(tasks.filter((task) => task.id !== id ))\n  }\n\n  //toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id) //getting the task\n    const updateTask = {...taskToToggle, reminder: !taskToToggle.reminder} //creating a new task and storing \n    const res = await fetch(`http://localhost:5000/tasks/${id}`, { //second param is for HTTP methods\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updateTask)\n    })\n\n    const data = await res.json()\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder} : task))\n  }\n\n  // self-note: where all component handling takes place (return)\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n        \n        <Route path='/' exact render= {(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? \n             <Tasks tasks = {tasks} onDelete = {deleteTask} onToggle = {toggleReminder}/>\n            : 'No tasks'}\n          </>\n        )} />\n        <Route path='/about' component={About} />\n\n        <Footer /> \n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}